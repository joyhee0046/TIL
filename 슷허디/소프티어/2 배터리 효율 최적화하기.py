'''
전기차의 성능을 결정하는 중요한 요소 중 하나는 고성능 배터리입니다.
최근 현대자동차그룹은 전기차의 주행 거리와 효율성을 개선하기 위해 펜타-배터리 모듈 이라는 새로운 배터리 디자인에 주목하고 있습니다.
이 디자인은 1*1크기의 배터리 셀 5개를 연결하여 만들어진 모듈입니다. (상하좌우로 인접한 셀들로만 연결되어 있습니다.)
전기차 배터리 팩 설계 프로젝트에 참여하고 있는 A는, N*M크기의 격자 모양 배터리 팩에 두 개의 펜타-배터리 모듈 을 배치해야 합니다.
각 격자 칸은 배터리 셀 하나에 해당하며, 각 셀은 고유의 에너지 출력 값을 가집니다.
펜타-배터리 모듈 을 배치하면 해당 배터리 셀의 에너지 출력 값만큼 효율 점수를 얻게 됩니다.
설계의 가장 중요한 조건은 두 모듈을 배치할 때 정확히 두 배터리 셀이 겹치도록 하는 것입니다.
겹쳐진 해당 셀들에서의 에너지 출력을 두 배로 증가시켜, 해당 두 배터리 셀에서는 두 배의 효율 점수를 얻게 됩니다.
즉, 겹쳐진 셀에서는 해당 셀의 점수를 두 번 얻게 됩니다.
설계의 조건을 만족하며 펜타-배터리 모듈 을 효율적으로 설치하여 효율 점수를 최대화할 수 있게 하는 프로그램을 작성하세요.

1 <= N, M <= 10
8 <= N*M <= 16
-1000 <= 각 셀의 에너지 출력값 <= 1000
파이썬 3초 1024MB
자바 2초 1024MB
'''

'''
입력
TC 2
2 4
10 2 8 9
15 3 10 2
3 4 10 11 -10 9
15 -10 10 2
-10 22 31 10
출력
84
144
'''
import sys

# 주어진 입력 받기
N, M = map(int, input().split())
ener_li = [list(map(int, input().split())) for _ in range(N)]

# 겹칠 최대 에너지 두칸 찾기.
dxy = [[0, 1], [0, -1], [1, 0], [-1, 0]]
max_ene = 0
for i in range(N):
    for j in range(M):
        for k in range(4):
            if max_ene < (ener_li[i][j] + ener_li[i+dxy[k][0]][j+dxy[k][1]]):
                max_ene = ener_li[i][j] + ener_li[i+dxy[k][0]][j+dxy[k][1]]
                max_eneli = [[i, j] , [i+dxy[k][0], j+dxy[k][1]]]

# 최대 에너지 두 칸 기준으로 겹치지 않게 세칸씩 총 6칸 고르기.
# 방문처리할 배열 생성. 이미 선택한 두 칸 방문처리
check_li = [[False] * N] * M
check_li[max_eneli[0][0]][max_eneli[0][1]] = True
check_li[max_eneli[1][0]][max_eneli[1][1]] = True
